//
// Navbars
// --------------------------------------------------

// Wrapper and base class
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
    position: relative;
    min-height: @navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
    margin-bottom: @navbar-margin-bottom;
    border: 1px solid transparent;

    // Prevent floats from breaking the navbar
    &:extend(.clearfix all);

    @media (max-width: @grid-float-breakpoint-max) {
        min-height: @navbar-height-m;
    }
    @media (min-width: @grid-float-breakpoint) {
        border-radius: @navbar-border-radius;

        &.scrolled {
            min-height: @navbar-scrolled-height;
        }
    }
}

// Navbar heading
//
// Groups `.navbar-brand` and `.navbar-toggle` into a single component for easy
// styling of responsive aspects.

.navbar-header {
    &:extend(.clearfix all);

    @media (min-width: @grid-float-breakpoint) {
        //float: left;
    }
}

// Navbar collapse (body)
//
// Group your navbar content into this for easy collapsing and expanding across
// various device sizes. By default, this content is collapsed when <768px, but
// will expand past that for a horizontal display.
//
// To start (on mobile devices) the navbar links, forms, and buttons are stacked
// vertically and include a `max-height` to overflow in case you have too much
// content for the user's viewport.

.navbar-collapse {
    overflow-x: visible;
    padding-right: @navbar-padding-horizontal;
    padding-left: @navbar-padding-horizontal;
    border-top: 1px solid transparent;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1);
    &:extend(.clearfix all);
    -webkit-overflow-scrolling: touch;
    line-height: 0;
    max-height: none;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;

    &.navbar-fade {
        overflow: hidden;
        width: 100%;
        opacity: 0;
        height: 0;
        -webkit-transition: height 1s @transition-timing-function 1.5s, opacity 0.5s @transition-timing-function 0s;
        transition: height 1s @transition-timing-function 1.5s, opacity 0.5s @transition-timing-function 0s;

        &.open {
            opacity: 1;
            height: 100vh;
            -webkit-transition: height 0s @transition-timing-function 0s, opacity 0.3s @transition-timing-function 0s;
            transition: height 0s @transition-timing-function 0s, opacity 0.3s @transition-timing-function 0s;
        }
    }

    .nav-collapse-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(18, 18, 26, 0.8);
    }

    .nav-display-table {
        display: table;
        height: 100%;
        width: 100%;

        .nav-display-table-cell {
            display: table-cell;
            vertical-align: middle;
            padding-bottom: @navbar-height;
        }
    }

    &.open {
        .fade-in {
            opacity: 1;
            transform: translateY(0);
            -webkit-transition: transform .4s @transition-timing-function .3s, opacity .4s @transition-timing-function;
            transition: transform .4s @transition-timing-function .3s, opacity .4s @transition-timing-function;
        }
    }

    .fade-in {
        opacity: 0;
        transform: translateY(-8px);

        &.fade-in-1 {
            -webkit-transition-delay: .3s;
            transition-delay: .3s;
        }
        &.fade-in-2 {
            -webkit-transition-delay: .4s;
            transition-delay: .4s;
        }
        &.fade-in-3 {
            -webkit-transition-delay: .5s;
            transition-delay: .5s;
        }
    }
}

// Both navbar header and collapse
//
// When a container is present, change the behavior of the header and collapse.

.container,
.container-fluid {
    > .navbar-header
        //> .navbar-collapse
    {
        margin-right: -@navbar-padding-horizontal;
        margin-left: -@navbar-padding-horizontal;

        @media (min-width: @grid-float-breakpoint) {
            margin-right: 0;
            margin-left: 0;
        }
    }
}

//
// Navbar alignment options
//
// Display the navbar across the entirety of the page or fixed it to the top or
// bottom of the page.

// Fix the top/bottom navbars when screen real estate supports it
.navbar-fixed-top {
    position: fixed;
    right: 0;
    left: 0;
    z-index: @zindex-navbar-fixed;

    // Undo the rounded corners
    @media (min-width: @grid-float-breakpoint) {
        border-radius: 0;
    }
}

.navbar-fixed-top {
    top: 0;
    border-width: 0 0 1px;
}

// Brand/project name

.navbar-brand {
    float: left;
    padding: ((@navbar-height-m - 40px) / 2) 15px;
    font-size: @font-size-large;
    line-height: @line-height-computed;
    .transition(all 0.3s @transition-timing-function);

    img {
        .transition(all 0.3s @transition-timing-function);
        display: inline-block;
        height: 40px;
    }
    @media (min-width: @screen-sm) {
        padding: ((@navbar-height - 67px) / 2) 0;
        img {
            height: 67px;
        }
    }
    @media (max-width: @grid-float-breakpoint-max) {
        height: @navbar-height-m;
        //padding: ((@navbar-height-m - @line-height-computed) / 2) @navbar-padding-horizontal;
    }
    @media (min-width: @grid-float-breakpoint) {
        .scrolled & {
            height: @navbar-scrolled-height;
            padding: ((@navbar-scrolled-height - 45px) / 2) 0;
            img {
                height: 45px;
            }
        }
    }
}

// Navbar toggle
//
// Custom button for toggling the `.navbar-collapse`, powered by the collapse
// JavaScript plugin.

.navbar-toggle {
    position: relative;
    float: right;
    margin-right: 5px;
    padding: 9px 10px;
    .navbar-vertical-align-mobile(46.594px);
    background-color: transparent;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid transparent;
    border-radius: @border-radius-base;

    // We remove the `outline` here, but later compensate by attaching `:hover`
    // styles to `:focus`.
    &:focus {
        outline: 0;
    }

    box-sizing: border-box;
    transform-style: preserve-3d;
    transition: transform 0.4s, margin 0.3s @transition-timing-function;
    transition-timing-function: @transition-timing-function;
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);

    &.open {
        transform-style: preserve-3d;
        /*transition: transform 0.4s;*/
        transform: rotateX(0deg) rotateY(0deg) rotateZ(-90deg);
    }

    // Bars
    @nav-bar-width: 28px;
    @nav-bar-active-width: 36px;
    @nav-bar-gutter: 8.8px;
    .icon-bar {
        display: block;
        width: @nav-bar-width;
        height: 3px;
        min-height: 0;
        min-width: 0;
        background-color: #fff;
    }

    .bar-top {
        margin-top: 0;
        margin-bottom: 0;
        padding-top: 0;
        font-size: 0;
        line-height: 0;
        transition: width 0.5s, transform 0.5s;
        transform: translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    &.open .bar-top {
        transition: width 0.5s, transform 0.2s;
        width: @nav-bar-active-width;
        transform: translateX(0px) translateY(12px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(-45deg);
    }

    .bar-middle {
        margin-top: @nav-bar-gutter;
        transition: width 0.5s;
    }
    &:hover .bar-middle {
        width: @nav-bar-width - 14px;
        transition: width 0.3s;
    }
    &.open {
        & .bar-middle,
        &:hover .bar-middle {
            width: 0;
            transition: transform 0.5s, width 0.3s;
            transform: translateX(18px) translateY(0px) translateZ(0px);
        }
    }

    .bar-bottom {
        margin-top: @nav-bar-gutter;
        transition: width 0.5s, transform 0.5s;
        transform: translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    &.open .bar-bottom {
        transition: width 0.5s, transform 0.2s;
        width: @nav-bar-active-width;
        transform: translateX(0px) translateY(-12px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(45deg);
    }
}

// Navbar Sns
.navbar-sns {
    .list-unstyled();
    .clearfix();
    float: right;
    margin: ((@navbar-height-m - 40px) / 2) 0;
    .transition(margin 0.3s @transition-timing-function);
    display: inline-block;

    > li {
        float: left;
        margin: 0 5px;
        .transition(opacity 0.3s @transition-timing-function);
        .transition-delay(0.3s);

        a {
            color: #ccc;
            font-size: 26px;

            &:hover {
                color: #fff;
            }
        }
    }

    @media (max-width: @screen-xs-max) {
        position: absolute;
        top: @navbar-height-m * 2;
        left: 15px;
        width: 100%;
        //display: none;
        visibility: hidden;
        > li {
            .opacity(0);
        }

        &.open {
            //display: block;
            visibility: visible;
            > li {
                .opacity(1);
            }
        }
    }
    @media (min-width: @screen-sm-min) {
        padding-right: 25px;
        margin: ((@navbar-height - 40px) / 2) 0;

        .scrolled & {
            margin: ((@navbar-scrolled-height - 40px) / 2) 0;
        }
    }
}

// Navbar nav links
//
// Builds on top of the `.nav` components with its own modifier class to make
// the nav the full height of the horizontal nav (above 768px).

.navbar-nav {
    margin: (@navbar-padding-vertical / 2) -@navbar-padding-horizontal;
    display: inline-block;
    margin-top: 100px;

    > li > a {
        position: relative;
        line-height: 1.29;
        font-size: 40px;
        font-family: @font-family-sans-serif, 'Malgun Gothic', Dotum, sans-serif;
        font-weight: 800;
        padding: 0 15px;
        display: inline-block;

        &.nuxt-link-active,
        &:hover {
            &:after {
                width: 100%;
            }
        }

        &:after {
            position: absolute;
            z-index: -1;
            display: inline-block;
            content: '';
            width: 0;
            height: 30px;
            bottom: 5px;
            left: 0;
            background: @brand-primary;
            transition: width 0.3s @transition-timing-function-3;
        }
    }
    > li {

        & + li {
            margin-top: 30px;
        }
    }
    // Uncollapse the nav
    @media (min-width: @grid-float-breakpoint) {
        > li {
            //float: left;
            > a {
                font-size: 70px;
                &:after {
                    height: 50px;
                    bottom: 13px;
                }
            }
            & + li {
                margin-top: 80px;
            }
        }
    }
}

// Component alignment
//
// Repurpose the pull utilities as their own navbar utilities to avoid specificity
// issues with parents and chaining. Only do this when the navbar is uncollapsed
// though so that navbar contents properly stack and align in mobile.
//
// Declared after the navbar components to ensure more specificity on the margins.

@media (min-width: @grid-float-breakpoint) {
    .navbar-left {
        .pull-left();
    }

    .navbar-right {
        .pull-right();
        margin-right: -@navbar-padding-horizontal;

        ~ .navbar-right {
            margin-right: 0;
        }
    }
}

// Alternate navbars
// --------------------------------------------------

// Default navbar
.navbar-default {
    background-color: rgba(18, 18, 26, 0.3);
    border-color: @navbar-default-border;

    &.open {
        background-color: transparent;
    }

    .navbar-brand {
        color: @navbar-default-brand-color;
        &:hover,
        &:focus {
            color: @navbar-default-brand-hover-color;
            background-color: @navbar-default-brand-hover-bg;
        }
    }

    .navbar-text {
        color: @navbar-default-color;
    }

    .navbar-nav {
        > li > a {
            color: @navbar-default-link-color;
            .transition(all 0.3s @transition-timing-function);

            &:hover,
            &:focus,
            &.nuxt-link-active {
                color: @navbar-default-link-hover-color;
                background-color: @navbar-default-link-hover-bg;
            }
        }
        > .active > a {
            &,
            &:hover,
            &:focus,
            &.nuxt-link-active {
                color: @navbar-default-link-active-color;
                background-color: @navbar-default-link-active-bg;
            }
        }
        > .disabled > a {
            &,
            &:hover,
            &:focus {
                color: @navbar-default-link-disabled-color;
                background-color: @navbar-default-link-disabled-bg;
            }
        }
    }

    .navbar-toggle {
        border-color: @navbar-default-toggle-border-color;
        &:hover,
        &:focus {
            background-color: @navbar-default-toggle-hover-bg;
        }
        .icon-bar {
            background-color: @navbar-default-toggle-icon-bar-bg;
        }
    }

    .navbar-collapse,
    .navbar-form {
        border-color: @navbar-default-border;
    }

    // Dropdown menu items
    .navbar-nav {
        // Remove background color from open dropdown
        > .open > a {
            &,
            &:hover,
            &:focus {
                background-color: @navbar-default-link-active-bg;
                color: @navbar-default-link-active-color;
            }
        }

        @media (max-width: @grid-float-breakpoint-max) {
            // Dropdowns get custom display when collapsed
            .open .dropdown-menu {
                > li > a {
                    color: @navbar-default-link-color;
                    &:hover,
                    &:focus {
                        color: @navbar-default-link-hover-color;
                        background-color: @navbar-default-link-hover-bg;
                    }
                }
                > .active > a {
                    &,
                    &:hover,
                    &:focus {
                        color: @navbar-default-link-active-color;
                        background-color: @navbar-default-link-active-bg;
                    }
                }
                > .disabled > a {
                    &,
                    &:hover,
                    &:focus {
                        color: @navbar-default-link-disabled-color;
                        background-color: @navbar-default-link-disabled-bg;
                    }
                }
            }
        }
    }
}